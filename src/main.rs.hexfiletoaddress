use cosmrs::AccountId;
use cosmrs::crypto::secp256k1::SigningKey;
use std::fs;
use hex::FromHex;
use std::error::Error;

fn main() -> Result<(), Box<dyn Error>> {
    // Read the private key from the file
    let private_key_hex = fs::read_to_string("/home/dad/.orga-wallet/privkey")?.trim().to_string();
    
    // Convert the hex string to bytes
    let private_key_bytes = Vec::from_hex(private_key_hex)?;

    // Create SigningKey from the private key bytes
    let signing_key = SigningKey::from_slice(&private_key_bytes)?;

    // Generate the public key from the signing key
    let public_key = signing_key.public_key();

    // Get the public key bytes
    let public_key_bytes = public_key.to_bytes();

    // Define the prefix (e.g., "cosmos")
    let prefix = "cosmos";

    // Create AccountId from the prefix and public key bytes
    let account_id = AccountId::new(prefix, &public_key_bytes)?;

    // Print the address
    println!("Address: {}", account_id);

    Ok(())
}
